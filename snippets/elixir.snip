snippet     @td
abbr        @typedoc
options     head
  @typedoc """
  ${1}
  """

snippet     @t
abbr        @type
options     head
  @type ${1} ::
  	${2}

snippet     @s
abbr        @spec
options     head
  @spec ${1}(${2}) :: ${3}

snippet     @md
abbr        @moduledoc
options     head
  @moduledoc """
  ${1}
  """

snippet     @d
abbr        @doc
options     head
  @doc """
  ${1}
  """

snippet     for
options     head
  for ${1} <- ${2} do
    ${3}
  end

snippet     with
options     head
  with ${1} <- ${2} do
    ${3}
  end


snippet     gens
abbr        GenServer
options     head
  use GenServer

  @doc false
  def start_link do
    GenServer.start_link(__MODULE__, ${1:Map.new}, name: __MODULE__)
  end

  @impl true
  def init(state) do
    {:ok, state}
  end


snippet     age
abbr        Agent
options     head
  use Agent

  @doc false
  def start_link do
    Agent.start_link(%{}, name: __MODULE__)
  end

snippet     hi
abbr        handle_info
options     head
  def handle_info(${1}, ${2:state}) do
    ${0}
  end


snippet     hc
abbr        handle_call
options     head
  def handle_call(${1}, _from, ${2:state}) do
    ${0}
  end


snippet     hca
abbr        handle_cast
options     head
  def handle_cast(${1}, ${2:state}) do
    ${0}
  end

snippet     he
abbr        handle_event
options     head
  def handle_event(${1}, ${2}, socket) do
    ${0}
    {:noreply, socket}
  end


snippet     pry
abbr        IEx.pry
options     head
  import IEx
  IEx.pry()
