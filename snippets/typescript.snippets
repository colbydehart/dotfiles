snippet i "Import" b
import ${2:{ $0 }} from '$1';
endsnippet

snippet ir "Import React" b
import React from 'react';
endsnippet

snippet rc "React Component" b
type Props = {
	$1
}
export const $2: React.FC<Props> = (props) => {
	return (
		$0
	);
}
endsnippet

snippet prop "Props" b
type Props = {
	$0
}
endsnippet

snippet rcl "React Component Light" b
export const $1: React.FC = () => {
	return (
		$0
	)
}
endsnippet

snippet / "Docstring" w
/** $0 */
endsnippet

snippet con "Const" b
const $1 = $0;
endsnippet

snippet exc "Export const" b
export const $1 = $0;
endsnippet

snippet typ "Type" b
type $1 = {
	$0
};
endsnippet

snippet ety "Export Type" b
export type $1 = {
	$0
};
endsnippet

snippet view "Ramda view" b
R.view(R.lensPath([$1]), $2)
endsnippet

snippet over "Ramda over" b
R.over(R.lensPath([$1]), ($3) => $0, $2)
endsnippet

snippet test "Jest Test" b
test('$1', $2() => {
	$0
})
endsnippet

snippet ur "useReducer" b
const [${1:state}, ${2:dispatch}] = React.useReducer(${3:reducer}, ${4: initialState});
endsnippet

snippet us "useState" b
const [$1, ${1/.*/set\u$0/}] = React.useState${3:<${4:State}>}($0);
endsnippet

snippet ue "useEffect" b
React.useEffect(() => {
	$0
}, [$1]);
endsnippet

snippet um "useMemo" b
const $1 = React.useMemo(() => $0, [$2]);
endsnippet

snippet fn "Arrow Function"
($1) => $0
endsnippet

snippet fun "Arrow Function with Braces"
($1) => {
	$0
}
endsnippet

snippet cl "console.log"
console.log($0)
endsnippet

snippet esd "eslint disable next line"
// eslint-disable-next-line
endsnippet

snippet relno "rel noopener noreferrer" b
rel="noopener noreferrer"
endsnippet

snippet df "display-flex" i
d-flex
endsnippet

snippet jcc "justify-content-center" i
justify-content-center
endsnippet

snippet jcs "justify-content-start" i
justify-content-start
endsnippet

snippet jce "justify-content-end" i
justify-content-end
endsnippet

snippet jcb "justify-content-between" i
justify-content-between
endsnippet

snippet jca "justify-content-around" i
justify-content-around
endsnippet

snippet aic "align-items-center" i
align-items-center
endsnippet

snippet ais "align-items-start" i
align-items-start
endsnippet

snippet aie "align-items-end" i
align-items-end
endsnippet

snippet aib "align-items-baseline" i
align-items-baseline
endsnippet

