# fast escape time
set -sg escape-time 0
# Start with 1
set -g base-index 1
# Don't rename my windows dude.
setw -g allow-rename off
#default term and shell
set -g default-terminal "screen-256color"
set -g default-shell $SHELL
# use vi settings
set -g status-keys vi
setw -g mode-keys vi
# mouse on
if-shell "if [[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]; then true; else false; fi" \
    'set -g mouse on; set -g mouse-utf8 on'
# increase history
set -g history-limit 10000
# idk what this does
setw -g monitor-activity on
# nicer looking modeline
set -g status-fg "#ffffaa"
set -g status-bg black
# find out if we are using vim
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# Unbindings
unbind C-b
unbind j
unbind '"'
unbind %
###################
#### Bindings #####
###################
# New Prefix
set -g prefix C-a
bind C-a send-prefix
# Window Splits
bind-key C-y split-window -h -c "#{pane_current_path}"
bind-key C-h split-window -v -c "#{pane_current_path}"
# Resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# Select Window
bind-key C-t new-window -c "#{pane_current_path}"
bind-key C-n next-window
bind-key C-p previous-window
bind-key C-x kill-pane
# better copying
unbind -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# new-session -n $HOST
